{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2019
  },
  "plugins": [
    "@typescript-eslint",
    "prettier",
    "eslint-plugin-tsdoc"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "env": {
    "node": true,
    "mocha": true,
    "es6": true
  },
  "rules": {
    "prettier/prettier": "error",

    "tsdoc/syntax": "warn",

    "no-console": "error",
    "eqeqeq": ["error", "always", {"null": "ignore"}],
    "strict": ["error", "global"],

    "@typescript-eslint/no-explicit-any": "off",

    "no-restricted-syntax": [
      "error",
      {
        "selector": "TSEnumDeclaration",
        "message": "Do not declare enums"
      },
      {
        "selector": "BinaryExpression[operator=/[=!]==/] Identifier[name='undefined']",
        "message": "Do not strictly check undefined"
      },
      {
        "selector": "BinaryExpression[operator=/[=!]==/] Literal[raw='null']",
        "message": "Do not strictly check null"
      },
      {
        "selector": "BinaryExpression[operator=/[=!]==?/] Literal[value='undefined']",
        "message": "Do not strictly check typeof undefined (NOTE: currently this rule only detects the usage of 'undefined' string literal so this could be a misfire)"
      }
    ]
  },
  "overrides": [{
    "files": ["*.d.ts"],
    "rules": {
      "prettier/prettier": "off",
      "@typescript-eslint/no-empty-interface": "off",
      "@typescript-eslint/no-misused-new": "off",
      "@typescript-eslint/ban-types": "off",
      "@typescript-eslint/no-unused-vars": "off"
    }
  },
  {
    "files": ["*.mjs"],
    "parserOptions": {"sourceType": "module"}

  },{
    "files": ["*.ts"],
    "parserOptions": {"sourceType": "module"}

  }]
}
