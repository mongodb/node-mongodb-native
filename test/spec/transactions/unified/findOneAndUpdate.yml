description: findOneAndUpdate

schemaVersion: '1.9'

runOnRequirements:
  -
    minServerVersion: '4.0'
    topologies:
      - replicaset
  -
    minServerVersion: 4.1.8
    topologies:
      - sharded
      - load-balanced

createEntities:
  -
    client:
      id: &client0 client0
      useMultipleMongoses: false
      observeEvents:
        - commandStartedEvent
  -
    database:
      id: &database0 database0
      client: *client0
      databaseName: &database_name transaction-tests
  -
    collection:
      id: &collection0 collection0
      database: *database0
      collectionName: &collection_name test
  -
    session:
      id: &session0 session0
      client: *client0

initialData:
  -
    collectionName: *collection_name
    databaseName: *database_name
    documents:
      - { _id: 1 }
      - { _id: 2 }
      - { _id: 3 }

tests:
  -
    description: findOneAndUpdate
    operations:
      -
        object: *session0
        name: startTransaction
      -
        object: *collection0
        name: findOneAndUpdate
        arguments:
          session: *session0
          filter: { _id: 3 }
          update:
            $inc:
              x: 1
          returnDocument: Before
        expectResult:
          _id: 3
      -
        object: *collection0
        name: findOneAndUpdate
        arguments:
          session: *session0
          filter: { _id: 4 }
          update:
            $inc:
              x: 1
          upsert: true
          returnDocument: After
        expectResult:
          _id: 4
          x: 1
      -
        object: *session0
        name: commitTransaction
      -
        object: *session0
        name: startTransaction
      # Test a second time to ensure txnNumber is incremented
      -
        object: *collection0
        name: findOneAndUpdate
        arguments:
          session: *session0
          filter: { _id: 3 }
          update:
            $inc:
              x: 1
          returnDocument: Before
        expectResult:
          _id: 3
          x: 1
      -
        object: *session0
        name: commitTransaction
      # Test a third time to ensure abort works
      -
        object: *session0
        name: startTransaction
      -
        object: *collection0
        name: findOneAndUpdate
        arguments:
          session: *session0
          filter: { _id: 3 }
          update:
            $inc:
              x: 1
          returnDocument: Before
        expectResult:
          _id: 3
          x: 2
      -
        object: *session0
        name: abortTransaction
    expectEvents:
      -
        client: *client0
        events:
          -
            commandStartedEvent:
              command:
                findAndModify: *collection_name
                query: { _id: 3 }
                update: { $inc: { x: 1 } }
                new: false
                lsid: { $$sessionLsid: *session0 }
                txnNumber: { $numberLong: '1' }
                startTransaction: true
                autocommit: false
                readConcern: { $$exists: false }
                writeConcern: { $$exists: false }
              commandName: findAndModify
              databaseName: *database_name
          -
            commandStartedEvent:
              command:
                findAndModify: *collection_name
                query: { _id: 4 }
                update: { $inc: { x: 1 } }
                new: true
                upsert: true
                lsid: { $$sessionLsid: *session0 }
                txnNumber: { $numberLong: '1' }
                startTransaction: { $$exists: false }
                autocommit: false
                readConcern: { $$exists: false }
                writeConcern: { $$exists: false }
              commandName: findAndModify
              databaseName: *database_name
          -
            commandStartedEvent:
              command:
                commitTransaction: 1
                lsid: { $$sessionLsid: *session0 }
                txnNumber: { $numberLong: '1' }
                startTransaction: { $$exists: false }
                autocommit: false
                readConcern: { $$exists: false }
                writeConcern: { $$exists: false }
              commandName: commitTransaction
              databaseName: admin
          -
            commandStartedEvent:
              command:
                findAndModify: *collection_name
                query: { _id: 3 }
                update: { $inc: { x: 1 } }
                new: false
                lsid: { $$sessionLsid: *session0 }
                txnNumber: { $numberLong: '2' }
                startTransaction: true
                autocommit: false
                readConcern:
                  afterClusterTime: { $$exists: true }
                writeConcern: { $$exists: false }
              commandName: findAndModify
              databaseName: *database_name
          -
            commandStartedEvent:
              command:
                commitTransaction: 1
                lsid: { $$sessionLsid: *session0 }
                txnNumber: { $numberLong: '2' }
                startTransaction: { $$exists: false }
                autocommit: false
                readConcern: { $$exists: false }
                writeConcern: { $$exists: false }
              commandName: commitTransaction
              databaseName: admin
          -
            commandStartedEvent:
              command:
                findAndModify: *collection_name
                query: { _id: 3 }
                update: { $inc: { x: 1 } }
                new: false
                lsid: { $$sessionLsid: *session0 }
                txnNumber: { $numberLong: '3' }
                startTransaction: true
                autocommit: false
                readConcern:
                  afterClusterTime: { $$exists: true }
                writeConcern: { $$exists: false }
              commandName: findAndModify
              databaseName: *database_name
          -
            commandStartedEvent:
              command:
                abortTransaction: 1
                lsid: { $$sessionLsid: *session0 }
                txnNumber: { $numberLong: '3' }
                startTransaction: { $$exists: false }
                autocommit: false
                readConcern: { $$exists: false }
                writeConcern: { $$exists: false }
              commandName: abortTransaction
              databaseName: admin
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents:
          - { _id: 1 }
          - { _id: 2 }
          - { _id: 3, x: 2 }
          - { _id: 4, x: 1 }
  -
    description: 'collection writeConcern ignored for findOneAndUpdate'
    operations:
      -
        object: testRunner
        name: createEntities
        arguments:
          entities:
            - collection:
                id: &collection_wc_majority collection_wc_majority
                database: *database0
                collectionName: *collection_name
                collectionOptions:
                  writeConcern: { w: majority }
      -
        object: *session0
        name: startTransaction
        arguments:
          writeConcern:
            w: majority
      -
        object: *collection_wc_majority
        name: findOneAndUpdate
        arguments:
          session: *session0
          filter: { _id: 3 }
          update:
            $inc:
              x: 1
          returnDocument: Before
        expectResult:
          _id: 3
      -
        object: *session0
        name: commitTransaction
    expectEvents:
      -
        client: *client0
        events:
          -
            commandStartedEvent:
              command:
                findAndModify: *collection_name
                query: { _id: 3 }
                update: { $inc: { x: 1 } }
                new: false
                lsid: { $$sessionLsid: *session0 }
                txnNumber: { $numberLong: '1' }
                startTransaction: true
                autocommit: false
                readConcern: { $$exists: false }
                writeConcern: { $$exists: false }
              commandName: findAndModify
              databaseName: *database_name
          -
            commandStartedEvent:
              command:
                commitTransaction: 1
                lsid: { $$sessionLsid: *session0 }
                txnNumber: { $numberLong: '1' }
                startTransaction: { $$exists: false }
                autocommit: false
                readConcern: { $$exists: false }
                writeConcern:
                  w: majority
              commandName: commitTransaction
              databaseName: admin
