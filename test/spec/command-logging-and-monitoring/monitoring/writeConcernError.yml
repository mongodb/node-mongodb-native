description: "writeConcernError"
schemaVersion: "1.4"
runOnRequirements:
  -
    minServerVersion: "4.3.1" # failCommand errorLabels option
    topologies:
      - replicaset
    serverless: "forbid"

createEntities:
  - client:
      id: &client client
      observeEvents:
        - commandStartedEvent
        - commandSucceededEvent
        - commandFailedEvent
  - database:
      id: &database database
      client: *client
      databaseName: &databaseName command-monitoring-tests
  - collection:
      id: &collection collection
      database: *database
      collectionName: &collectionName test

initialData:
  - collectionName: *collectionName
    databaseName: *databaseName
    documents:
      - { _id: 1, x: 11 }

tests:
  - description: "A retryable write with write concern errors publishes success event"
    operations:
      - name: failPoint
        object: testRunner
        arguments:
          client: *client
          failPoint:
            configureFailPoint: failCommand
            mode: { times: 1 }
            data:
              failCommands: [ insert ]
              errorLabels: [ RetryableWriteError ]
              writeConcernError:
                code: 91 # ShutdownInProgress
      - name: insertOne
        object: *collection
        arguments:
          document: { _id: 2, x: 22 }
    expectEvents:
      - client: *client
        events:
          - commandStartedEvent:
              command:
                insert: *collectionName
                documents:
                  - { _id: 2, x: 22 }
                ordered: true
              commandName: insert
              databaseName: *databaseName
          - commandSucceededEvent:
              reply:
                ok: 1
                n: 1
                errorLabels: [ "RetryableWriteError" ]
                writeConcernError: { code: 91 }
              commandName: insert
          - commandStartedEvent:
              command:
                insert: *collectionName
                documents:
                  - { _id: 2, x: 22 }
                ordered: true
              commandName: insert
              databaseName: *databaseName
          - commandSucceededEvent:
              reply:
                ok: 1
                n: 1
              commandName: insert
