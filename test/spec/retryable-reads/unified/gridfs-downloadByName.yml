description: gridfs-downloadByName

schemaVersion: '1.9'

runOnRequirements:
  -
    minServerVersion: '4.0'
    topologies:
      - single
      - replicaset
  -
    minServerVersion: 4.1.7
    topologies:
      - sharded
      - load-balanced

createEntities:
  -
    client:
      id: &client0 client0
      useMultipleMongoses: false
      observeEvents:
        - commandStartedEvent
  -
    database:
      id: &database0 database0
      client: *client0
      databaseName: &database_name retryable-reads-tests
  -
    bucket:
      id: &bucket0 bucket0
      database: *database0

initialData:
  -
    collectionName: &files_collection_name fs.files
    databaseName: *database_name
    documents:
      -
        _id:
          $oid: '000000000000000000000001'
        length: 1
        chunkSize: 4
        uploadDate:
          $date: '1970-01-01T00:00:00.000Z'
        filename: abc
        metadata: {  }
  -
    collectionName: &chunks_collection_name fs.chunks
    databaseName: *database_name
    documents:
      -
        _id:
          $oid: '000000000000000000000002'
        files_id:
          $oid: '000000000000000000000001'
        'n': 0
        data:
          $binary:
            base64: EQ== # hex: 11
            subType: '00'
tests:
  -
    description: 'DownloadByName succeeds on first attempt'
    operations:
      - &retryable_operation
        object: *bucket0
        name: downloadByName
        arguments:
          filename: abc
        expectResult:
          $$matchesHexBytes: "11"
    expectEvents:
      -
        client: *client0
        events:
          - &retryable_command_started_event
            commandStartedEvent:
              command:
                find: *files_collection_name
                filter:
                  filename: abc
              databaseName: *database_name
          - &find_chunks_command_started_event
            commandStartedEvent:
              command:
                find: *chunks_collection_name
                # Avoid checking additional fields since the exact query may
                # differ among drivers. expectResult is sufficient to assert
                # correctness.
              databaseName: *database_name
  -
    description: 'DownloadByName succeeds on second attempt'
    operations:
      -
        object: testRunner
        name: failPoint
        arguments:
          client: *client0
          failPoint: &failCommand_failPoint
            configureFailPoint: failCommand
            mode:
              times: 1
            data:
              failCommands:
                - find
              closeConnection: true
      - *retryable_operation
    expectEvents:
      -
        client: *client0
        events:
          - *retryable_command_started_event
          - *retryable_command_started_event
          - *find_chunks_command_started_event
  -
    description: 'DownloadByName fails on first attempt'
    operations:
      -
        object: testRunner
        name: createEntities
        arguments:
          entities:
            - client:
                id: &client1 client1
                useMultipleMongoses: false
                uriOptions:
                  retryReads: false
                observeEvents:
                  - commandStartedEvent
            - database:
                id: &database1 database1
                client: *client1
                databaseName: *database_name
            -
              bucket:
                id: &bucket1 bucket1
                database: *database1
      -
        object: testRunner
        name: failPoint
        arguments:
          client: *client1
          failPoint: *failCommand_failPoint
      - &retryable_operation_fails
        object: *bucket1
        name: downloadByName
        arguments:
          filename: abc
        expectError:
          isError: true
    expectEvents:
      -
        client: *client1
        events:
          - *retryable_command_started_event
  -
    description: 'DownloadByName fails on second attempt'
    operations:
      -
        object: testRunner
        name: failPoint
        arguments:
          client: *client0
          failPoint:
            configureFailPoint: failCommand
            mode:
              times: 2
            data:
              failCommands:
                - find
              closeConnection: true
      - <<: *retryable_operation_fails
        object: *bucket0
    expectEvents:
      -
        client: *client0
        events:
          - *retryable_command_started_event
          - *retryable_command_started_event
