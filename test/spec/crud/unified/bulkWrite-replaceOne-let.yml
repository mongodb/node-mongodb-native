description: "BulkWrite replaceOne-let"

schemaVersion: "1.0"

createEntities:
  - client:
      id: &client0 client0
      observeEvents: [ commandStartedEvent ]
  - database:
      id: &database0 database0
      client: *client0
      databaseName: &database0Name crud-tests
  - collection:
      id: &collection0 collection0
      database: *database0
      collectionName: &collection0Name coll0

initialData:
  - collectionName: *collection0Name
    databaseName: *database0Name
    documents:
      - { _id: 1 }
      - { _id: 2 }

tests:
  - description: "BulkWrite replaceOne with let option"
    runOnRequirements:
      - minServerVersion: "5.0"
    operations:
      - object: *collection0
        name: bulkWrite
        arguments:
          requests:
            - replaceOne:
                filter: &filter
                  $expr:
                    $eq: [ "$_id", "$$id" ]
                replacement: &replacement {"x": 3}
          let: &let
            id: 1
    expectEvents:
      - client: *client0
        events:
          - commandStartedEvent:
              command:
                update: *collection0Name
                updates:
                  - q: *filter
                    u: *replacement
                let: *let
    outcome:
      - collectionName: *collection0Name
        databaseName: *database0Name
        documents:
          - { _id: 1, x: 3 }
          - { _id: 2 }

  - description: "BulkWrite replaceOne with let option unsupported (server-side error)"
    runOnRequirements:
      - minServerVersion: "4.2"
        maxServerVersion: "4.9"
    operations:
      - object: *collection0
        name: bulkWrite
        arguments:
          requests:
            - replaceOne:
                filter: *filter
                replacement: *replacement
          let: *let
        expectError:
          errorContains: "'update.let' is an unknown field"
          isClientError: false
    expectEvents:
      - client: *client0
        events:
          - commandStartedEvent:
              command:
                update: *collection0Name
                updates:
                  - q: *filter
                    u: *replacement
                let: *let
    outcome:
      - collectionName: *collection0Name
        databaseName: *database0Name
        documents:
          - { _id: 1 }
          - { _id: 2 }
