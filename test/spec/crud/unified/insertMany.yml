description: insertMany

schemaVersion: '1.0'

createEntities:
  -
    client:
      id: &client0 client0
  -
    database:
      id: &database0 database0
      client: client0
      databaseName: &database_name crud-v1
  -
    collection:
      id: &collection0 collection0
      database: database0
      collectionName: &collection_name coll

initialData:
  -
    collectionName: *collection_name
    databaseName: *database_name
    documents:
      - { _id: 1, x: 11 }

tests:
  -
    description: 'InsertMany with non-existing documents'
    operations:
      -
        object: *collection0
        name: insertMany
        arguments:
          documents:
            - { _id: 2, x: 22 }
            - { _id: 3, x: 33 }
          ordered: true
        expectResult:
          $$unsetOrMatches:
            insertedIds:
              $$unsetOrMatches:
                '0': 2
                '1': 3
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents:
          - { _id: 1, x: 11 }
          - { _id: 2, x: 22 }
          - { _id: 3, x: 33 }
  -
    description: 'InsertMany continue-on-error behavior with unordered (preexisting duplicate key)'
    operations:
      -
        object: *collection0
        name: insertMany
        arguments:
          documents:
            - { _id: 1, x: 11 }
            - { _id: 2, x: 22 }
            - { _id: 3, x: 33 }
          ordered: false
        expectError:
          isError: true
          expectResult:
            deletedCount: 0
            insertedCount: 2
            # Since the map of insertedIds is generated before execution it
            # could indicate inserts that did not actually succeed. We omit this
            # field rather than expect drivers to provide an accurate map
            # filtered by write errors.
            matchedCount: 0
            modifiedCount: 0
            upsertedCount: 0
            upsertedIds: {  }
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents:
          - { _id: 1, x: 11 }
          - { _id: 2, x: 22 }
          - { _id: 3, x: 33 }
  -
    description: 'InsertMany continue-on-error behavior with unordered (duplicate key in requests)'
    operations:
      -
        object: *collection0
        name: insertMany
        arguments:
          documents:
            - { _id: 2, x: 22 }
            - { _id: 2, x: 22 }
            - { _id: 3, x: 33 }
          ordered: false
        expectError:
          isError: true
          expectResult:
            deletedCount: 0
            insertedCount: 2
            # Since the map of insertedIds is generated before execution it
            # could indicate inserts that did not actually succeed. We omit this
            # field rather than expect drivers to provide an accurate map
            # filtered by write errors.
            matchedCount: 0
            modifiedCount: 0
            upsertedCount: 0
            upsertedIds: {  }
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents:
          - { _id: 1, x: 11 }
          - { _id: 2, x: 22 }
          - { _id: 3, x: 33 }
