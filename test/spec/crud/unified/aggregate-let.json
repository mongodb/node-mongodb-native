{
  "description": "aggregate-let",
  "schemaVersion": "1.0",
  "createEntities": [
    {
      "client": {
        "id": "client0",
        "observeEvents": [
          "commandStartedEvent"
        ]
      }
    },
    {
      "database": {
        "id": "database0",
        "client": "client0",
        "databaseName": "crud-tests"
      }
    },
    {
      "collection": {
        "id": "collection0",
        "database": "database0",
        "collectionName": "coll0"
      }
    }
  ],
  "initialData": [
    {
      "collectionName": "coll0",
      "databaseName": "crud-tests",
      "documents": [
        {
          "_id": 1
        }
      ]
    }
  ],
  "tests": [
    {
      "description": "Aggregate with let option",
      "runOnRequirements": [
        {
          "minServerVersion": "5.0"
        }
      ],
      "operations": [
        {
          "name": "aggregate",
          "object": "collection0",
          "arguments": {
            "pipeline": [
              {
                "$match": {
                  "$expr": {
                    "$eq": [
                      "$_id",
                      "$$id"
                    ]
                  }
                }
              },
              {
                "$project": {
                  "_id": 0,
                  "x": "$$x",
                  "y": "$$y",
                  "rand": "$$rand"
                }
              }
            ],
            "let": {
              "id": 1,
              "x": "foo",
              "y": {
                "$literal": "bar"
              },
              "rand": {
                "$rand": {}
              }
            }
          },
          "expectResult": [
            {
              "x": "foo",
              "y": "bar",
              "rand": {
                "$$type": "double"
              }
            }
          ]
        }
      ],
      "expectEvents": [
        {
          "client": "client0",
          "events": [
            {
              "commandStartedEvent": {
                "command": {
                  "aggregate": "coll0",
                  "pipeline": [
                    {
                      "$match": {
                        "$expr": {
                          "$eq": [
                            "$_id",
                            "$$id"
                          ]
                        }
                      }
                    },
                    {
                      "$project": {
                        "_id": 0,
                        "x": "$$x",
                        "y": "$$y",
                        "rand": "$$rand"
                      }
                    }
                  ],
                  "let": {
                    "id": 1,
                    "x": "foo",
                    "y": {
                      "$literal": "bar"
                    },
                    "rand": {
                      "$rand": {}
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "description": "Aggregate with let option and dollar-prefixed $literal value",
      "runOnRequirements": [
        {
          "minServerVersion": "5.0",
          "topologies": [
            "single",
            "replicaset"
          ]
        }
      ],
      "operations": [
        {
          "name": "aggregate",
          "object": "collection0",
          "arguments": {
            "pipeline": [
              {
                "$match": {
                  "$expr": {
                    "$eq": [
                      "$_id",
                      "$$id"
                    ]
                  }
                }
              },
              {
                "$project": {
                  "_id": 0,
                  "x": "$$x",
                  "y": "$$y",
                  "rand": "$$rand"
                }
              }
            ],
            "let": {
              "id": 1,
              "x": "foo",
              "y": {
                "$literal": "$bar"
              },
              "rand": {
                "$rand": {}
              }
            }
          },
          "expectResult": [
            {
              "x": "foo",
              "y": "$bar",
              "rand": {
                "$$type": "double"
              }
            }
          ]
        }
      ],
      "expectEvents": [
        {
          "client": "client0",
          "events": [
            {
              "commandStartedEvent": {
                "command": {
                  "aggregate": "coll0",
                  "pipeline": [
                    {
                      "$match": {
                        "$expr": {
                          "$eq": [
                            "$_id",
                            "$$id"
                          ]
                        }
                      }
                    },
                    {
                      "$project": {
                        "_id": 0,
                        "x": "$$x",
                        "y": "$$y",
                        "rand": "$$rand"
                      }
                    }
                  ],
                  "let": {
                    "id": 1,
                    "x": "foo",
                    "y": {
                      "$literal": "$bar"
                    },
                    "rand": {
                      "$rand": {}
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "description": "Aggregate with let option unsupported (server-side error)",
      "runOnRequirements": [
        {
          "minServerVersion": "2.6.0",
          "maxServerVersion": "4.4.99"
        }
      ],
      "operations": [
        {
          "name": "aggregate",
          "object": "collection0",
          "arguments": {
            "pipeline": [
              {
                "$match": {
                  "_id": 1
                }
              }
            ],
            "let": {
              "x": "foo"
            }
          },
          "expectError": {
            "errorContains": "unrecognized field 'let'",
            "isClientError": false
          }
        }
      ],
      "expectEvents": [
        {
          "client": "client0",
          "events": [
            {
              "commandStartedEvent": {
                "command": {
                  "aggregate": "coll0",
                  "pipeline": [
                    {
                      "$match": {
                        "_id": 1
                      }
                    }
                  ],
                  "let": {
                    "x": "foo"
                  }
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
