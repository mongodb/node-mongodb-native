# Test that setting a default write concern does not add a write concern to the command sent over the wire.
# Test operations that require 3.2+ server, where findAndModify started to accept a write concern.

description: default-write-concern-3.2

schemaVersion: "1.0"

runOnRequirements:
  - minServerVersion: "3.2"

createEntities:
  -
    client:
      id: &client0 client0
      observeEvents:
        - commandStartedEvent
  -
    database:
      id: &database0 database0
      client: *client0
      databaseName: &database_name default-write-concern-tests
      databaseOptions:
        writeConcern: {}
  -
    collection:
      id: &collection0 collection0
      database: *database0
      collectionName: &collection_name coll
      collectionOptions:
        writeConcern: {}

initialData:
  -
    collectionName: *collection_name
    databaseName: *database_name
    documents:
      - { _id: 1, x: 11 }
      - { _id: 2, x: 22 }

tests:
  -
    description: findAndModify operations omit default write concern
    operations:
      -
        name: findOneAndUpdate
        object: *collection0
        arguments:
          filter: { _id: 1 }
          update: { $set: { x: 1 } }
      -
        name: findOneAndReplace
        object: *collection0
        arguments:
          filter: { _id: 2 }
          replacement: { x: 2 }
      -
        name: findOneAndDelete
        object: *collection0
        arguments:
          filter: { _id: 2 }
    expectEvents:
      -
        client: *client0
        events:
          -
            commandStartedEvent:
              command:
                findAndModify: *collection_name
                query: { _id: 1 }
                update: { $set: { x: 1 } }
                writeConcern: { $$exists: false }
          -
            commandStartedEvent:
              command:
                findAndModify: *collection_name
                query: { _id: 2 }
                update: { x: 2 }
                writeConcern: { $$exists: false }
          -
            commandStartedEvent:
              command:
                findAndModify: *collection_name
                query: { _id: 2 }
                remove: true
                writeConcern: { $$exists: false }
    outcome:
      -
        collectionName: *collection_name
        databaseName: *database_name
        documents:
          - { _id: 1, x: 1 }
