runOn:
  - minServerVersion: "4.1.10"
database_name: &database_name "default"
collection_name: &collection_name "default"

data:
  - &doc0_encrypted { _id: 1, encrypted_string: {{ciphertext("string0", field="encrypted_string")}} }
json_schema: {{schema()}}
key_vault_data: [{{key()}}]

tests:
  - description: "findOneAndReplace with deterministic encryption"
    clientOptions:
      autoEncryptOpts:
        kmsProviders:
          aws: {} # Credentials filled in from environment.
    operations:
      - name: findOneAndReplace
        arguments:
          filter: { encrypted_string: "string0" }
          replacement: { encrypted_string: "string1" }
          returnDocument: Before
        result: { _id: 1, encrypted_string: "string0" }
    expectations:
      # Auto encryption will request the collection info.
      - command_started_event:
          command:
            listCollections: 1
            cursor: {}
            filter:
              name: *collection_name
          command_name: listCollections
      - command_started_event:
          command:
            listCollections: 1
            cursor: {}
            filter:
              name: "datakeys"
            $db: admin
          command_name: listCollections
      # Then key is fetched from the key vault.
      - command_started_event:
          command:
            find: datakeys
            filter: {"$or": [{"_id": {"$in": [ {{key()["_id"]}} ] }}, {"keyAltNames": {"$in": []}}]}
            $db: admin
          command_name: find
      - command_started_event:
          command:
            findAndModify: *collection_name
            query: { encrypted_string: { $eq: {{ciphertext("string0", field="encrypted_string")}} } }
            update: { encrypted_string: {{ciphertext("string1", field="encrypted_string")}}  }
          command_name: findAndModify
    outcome:
      collection:
        # Outcome is checked using a separate MongoClient without auto encryption.
        data:
          - { _id: 1, encrypted_string: {{ciphertext("string1", field="encrypted_string")}} }