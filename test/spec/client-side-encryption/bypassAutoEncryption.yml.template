runOn:
  - minServerVersion: "4.1.10"
database_name: &database_name "default"
collection_name: &collection_name "default"

data: [{_id: 1, encrypted_string: {{ciphertext("string0", field="encrypted_string")}} }]
json_schema: {{schema()}}
key_vault_data: [{{key()}}]

tests:
  - description: "Insert with bypassAutoEncryption"
    clientOptions:
      autoEncryptOpts:
        bypassAutoEncryption: true
        kmsProviders:
          aws: {} # Credentials filled in from environment.
    operations:
      - name: insertOne
        arguments:
          document: { _id: 2, encrypted_string: "string0" }
          bypassDocumentValidation: true
      - name: find
        arguments:
          filter: { }
        result:
          - { _id: 1, encrypted_string: "string0" }
          - { _id: 2, encrypted_string: "string0" }
    expectations:
      - command_started_event:
          command:
            insert: *collection_name
            documents:
              # No encryption.
              - { _id: 2, encrypted_string: "string0" }
            ordered: true
          command_name: insert
      - command_started_event:
          command:
            find: *collection_name
            filter: { }
          command_name: find
      - command_started_event:
          command:
            find: datakeys
            filter: {"$or": [{"_id": {"$in": [ {{key()["_id"]}} ] }}, {"keyAltNames": {"$in": []}}]}
            $db: admin
          command_name: find
    outcome:
      collection:
        # Outcome is checked using a separate MongoClient without auto encryption.
        data:
          - { _id: 1, encrypted_string: {{ciphertext("string0", field="encrypted_string")}} }
          - { _id: 2, encrypted_string: "string0" }
  - description: "Insert with bypassAutoEncryption for local schema"
    clientOptions:
      autoEncryptOpts:
        schemaMap:
          "default.default": {{ schema() }}
        bypassAutoEncryption: true
        kmsProviders:
          aws: {} # Credentials filled in from environment.
    operations:
      - name: insertOne
        arguments:
          document: { _id: 2, encrypted_string: "string0" }
          bypassDocumentValidation: true
      - name: find
        arguments:
          filter: { }
        result:
          - { _id: 1, encrypted_string: "string0" }
          - { _id: 2, encrypted_string: "string0" }
    expectations:
      - command_started_event:
          command:
            insert: *collection_name
            documents:
              # No encryption.
              - { _id: 2, encrypted_string: "string0" }
            ordered: true
          command_name: insert
      - command_started_event:
          command:
            find: *collection_name
            filter: { }
          command_name: find
      - command_started_event:
          command:
            find: datakeys
            filter: {"$or": [{"_id": {"$in": [ {{key()["_id"]}} ] }}, {"keyAltNames": {"$in": []}}]}
            $db: admin
          command_name: find
    outcome:
      collection:
        # Outcome is checked using a separate MongoClient without auto encryption.
        data:
          - { _id: 1, encrypted_string: {{ciphertext("string0", field="encrypted_string")}} }
          - { _id: 2, encrypted_string: "string0" }