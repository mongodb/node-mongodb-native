description: "createSearchIndex"
schemaVersion: "1.4"
createEntities:
  - client:
      id: &client0 client0
      useMultipleMongoses: false
      observeEvents:
        - commandStartedEvent
  - database:
      id: &database0 database0
      client: *client0
      databaseName: *database0
  - collection:
      id: &collection0 collection0
      database: *database0
      collectionName: *collection0

runOnRequirements:
  - minServerVersion: "7.0.0"
    topologies: [ replicaset, load-balanced, sharded ]
    serverless: forbid

tests:
  - description: "no name provided for an index definition"
    operations:
      - name: createSearchIndex
        object: *collection0
        arguments:
          model: { definition: &definition { mappings: { dynamic: true } } }
        expectError:
          # Search indexes are only available on 7.0+ atlas clusters.  DRIVERS-2630 will add e2e testing 
          # against an Atlas cluster and the expectError will be removed.
          isError: true
          errorContains: Search index commands are only supported with Atlas
    expectEvents:
      - client: *client0
        events:
          - commandStartedEvent:
              command:
                createSearchIndexes: *collection0
                indexes: [ { definition: *definition } ]
                $db: *database0

  - description: "name provided for an index definition"
    operations:
      - name: createSearchIndex
        object: *collection0
        arguments: 
          model: { definition: &definition { mappings: { dynamic: true } } , name: 'test index' }
        expectError:
          # Search indexes are only available on 7.0+ atlas clusters.  DRIVERS-2630 will add e2e testing 
          # against an Atlas cluster and the expectError will be removed.
          isError: true
          errorContains: Search index commands are only supported with Atlas
    expectEvents:
      - client: *client0
        events:
          - commandStartedEvent:
              command:
                createSearchIndexes: *collection0
                indexes: [ { definition: *definition, name: 'test index' } ]
                $db: *database0