name: Compress and Sign
description: 'Compresses package and signs with garasign'

inputs: 
    aws_role_arn:
      description: 'AWS role input for drivers-github-tools/gpg-sign@v2'
      required: true
    aws_region_name:
      description: 'AWS region name input for drivers-github-tools/gpg-sign@v2'
      required: true
    aws_secret_id:
      description: 'AWS secret id input for drivers-github-tools/gpg-sign@v2'
      required: true
    npm_package_name:
      description: 'The name for the npm package this repository represents'
      required: true

runs:
  using: composite
  steps:
    - run: npm pack
      shell: bash

    - name: Get release version and release package file name
      id: get_vars
      shell: bash
      run: |
        package_version=$(jq --raw-output '.version' package.json)
        echo "package_version=${package_version}" >> "$GITHUB_OUTPUT"
        echo "package_file=${{ inputs.npm_package_name }}-${package_version}.tgz" >> "$GITHUB_OUTPUT"

    - name: Set up drivers-github-tools
      uses: mongodb-labs/drivers-github-tools/setup@v2
      with: 
        aws_region_name: ${{ inputs.aws_region_name }}
        aws_role_arn: ${{ inputs.aws_role_arn }}
        aws_secret_id: ${{ inputs.aws_secret_id }}

    - name: Create detached signature
      uses: mongodb-labs/drivers-github-tools/gpg-sign@v2
      with: 
        filenames: ${{ steps.get_vars.outputs.package_file }}
      env: 
        RELEASE_ASSETS: ${{ steps.get_vars.outputs.package_file }}.temp.sig

    - name: Name release asset correctly 
      run: mv ${{ steps.get_vars.outputs.package_file }}.temp.sig ${{ steps.get_vars.outputs.package_file }}.sig
      shell: bash

    - name: "Upload release artifacts"
      run: gh release upload v${{ steps.get_vars.outputs.package_version }} ${{ steps.get_vars.outputs.package_file }}.sig
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}